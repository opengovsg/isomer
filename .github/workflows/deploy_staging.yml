name: Deploy to staging

concurrency:
  group: deploy-staging-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - staging

# NOTE: This is actually using our federated isomer-staging account
jobs:
  deploy_staging:
    name: Deploy app to staging
    uses: ./.github/workflows/aws_deploy.yml
    # NOTE: deploy in `staging` env to set env specific secrets
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
      SLACK_NOTIFY_TEAM_ID: ${{ secrets.SLACK_NOTIFY_TEAM_ID }}
    with:
      aws-region: "ap-southeast-1"
      aws-account-id: "058264420411"
      cicd-role: "arn:aws:iam::058264420411:role/isomer-next-infra-github-oidc-role-aaefdfd"
      ecr-repository: "isomer-next-infra-stg-ecr"
      ecs-cluster-name: "studio-staging-ecs"
      ecs-service-name: "studio-staging-ecs-service"
      ecs-container-name: "studio"
      ecs-container-port: 3000
      environment: "staging"
      shortEnv: "stg"
      codedeploy-appspec-path: .aws/deploy/appspec.json
      ecs-task-definition-path: .aws/deploy/task-definition.json
      codedeploy-application: "studio-staging-ecs-app"
      codedeploy-deployment-group: "studio-staging-ecs-dg"
      ecs-task-role: studio-staging-ecs-task-role
      ecs-task-exec-role: studio-staging-ecs-task-exec-role
      app-url: "https://staging-studio.isomer.gov.sg"
      app-name: "Isomer Studio (Staging)"
      app-version: ${{ github.sha }}
      app-s3-region: "ap-southeast-1"
      app-s3-assets-bucket-name: "isomer-next-infra-stg-assets-private-61710b8"
      app-s3-assets-domain-name: "isomer-user-content-stg.by.gov.sg"
      app-growthbook-client-key: "sdk-x4jkIJGr4TizR8qK"
      app-intercom-app-id: "jv2tjc3g"
