name: CI

on:
  push:
    branches:
      - main
      - staging
      - production
  pull_request:
    types: [opened, synchronize]

env:
  LOG_LEVEL: silent

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Lint
        run: npm run lint

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Format
        run: npm run format

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Typecheck
        run: npm run typecheck

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Install playwright
        run: npx playwright install chromium

      - name: Load .env file
        uses: xom9ikk/dotenv@v2
        with:
          mode: test

      - name: Next.js cache
        uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Start test containers
        run: npm run setup:test

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test-start

      - name: Stop test containers
        run: npm run teardown

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test results
          path: |
            playwright/test-results
