import type { Transaction as NativeTransaction } from "kysely"
import { Kysely as NativeKysely } from "kysely"

import type { DB } from "~prisma/generated/generatedTypes"

/**
 * Do not edit ~prisma/generated/generatedTypes and ~prisma/generated/generatedEnums files directly.
 * They are auto generated by kysely-prisma.
 */

// Model is exported as a fallback for users who need non-selectable variants of the types
export * as Model from "~prisma/generated/generatedTypes"
export type { DB } from "~prisma/generated/generatedTypes"
export * from "~prisma/generated/generatedEnums"
export * from "~prisma/generated/selectableTypes"
export type { Insertable, Updateable, QueryNode } from "kysely"
export { sql } from "kysely"

export class Kysely<DB> extends NativeKysely<DB> {
  static readonly #identifier: unique symbol = Symbol()

  #identity(): symbol {
    return (Kysely<DB>).#identifier
  }
}

/**
 * This type is used to represent a transaction-only object
 */
export type Transaction<DB> = Omit<NativeTransaction<DB>, "transaction">

/**
 * SafeKysely is a type that can be either a Kysely or a Transaction type
 */
export type SafeKysely = Transaction<DB> | Kysely<DB>
