// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator kysely {
  provider     = "prisma-kysely"
  readOnlyIds  = true
  output       = "./generated"
  fileName     = "generatedTypes.ts"
  // Optionally generate runtime enums to a separate file
  enumFileName = "generatedEnums.ts"
}

model VerificationToken {
  identifier String   @id
  token      String
  attempts   Int      @default(0)
  expires    DateTime
}

model Resource {
  id       Int       @id @default(autoincrement())
  name     String
  siteId   Int
  site     Site      @relation(fields: [siteId], references: [id])
  parentId Int?
  parent   Resource? @relation("parentRelation", fields: [parentId], references: [id])
  blobId   Int?      @unique
  blob     Blob?     @relation(fields: [blobId], references: [id])

  children Resource[] @relation("parentRelation")

  permission Permission[]
}

model User {
  id            String  @id @default(cuid())
  name          String
  email         String  @unique
  phone         String
  preferredName String?

  permission  Permission[]
  siteMembers SiteMember[]
}

model Permission {
  id         Int      @id @default(autoincrement())
  resourceId Int
  resource   Resource @relation(fields: [resourceId], references: [id])
  userId     String 
  user       User     @relation(fields: [userId], references: [id])
  role       RoleType

  // Delete the row if either resource or user is deleted, default behavior cascade
}

model Site {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  resources   Resource[]
  siteMembers SiteMember[]
  // NOTE: This is `theme/isGovernment/sitemap`
  // This is currently put as `Json` for ease of extensibility
  // when we lock in what we actually want for site-wide config, 
  // we should put this in our db table.
  config      Json
  navbar      Navbar?
  footer      Footer?
}

model Navbar {
  id      Int  @id @default(autoincrement())
  siteId  Int  @unique
  site    Site @relation(fields: [siteId], references: [id])
  content Json
}

model Footer {
  id      Int  @id @default(autoincrement())
  siteId  Int  @unique
  site    Site @relation(fields: [siteId], references: [id])
  content Json
}

model Blob {
  id      Int  @id @default(autoincrement())
  content Json

  // Should the blob be deleted on deletion of the resource? 
  resource Resource?
}

model SiteMember {
  userId String 
  user   User @relation(fields: [userId], references: [id])
  siteId Int
  site   Site @relation(fields: [siteId], references: [id])

  @@id([siteId, userId])
}

enum RoleType {
  Admin
  Editor
  Publisher
}
